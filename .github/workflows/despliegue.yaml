name: Deploy Symfony API with MySQL

on:
  push:
    branches:
      - main

env:
  MYSQL_PORT: 3306
  DB_NAME: proyecto
  DB_USER: appuser
  DB_PASSWORD: AppUserPass456!
  MYSQL_ROOT_PASSWORD: RootPass123!

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install dependencies
        run: composer install
        working-directory: backend

      - name: Run tests
        run: ./vendor/bin/phpunit tests
        working-directory: backend

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install dependencies
        run: composer install
        working-directory: backend

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

          ssh $USERNAME@$HOST "mkdir -p $DEPLOY_PATH/{var,public}"

          rsync -avz --delete \
            --exclude='.git' \
            --exclude='.env.local' \
            --exclude='var/' \
            --exclude='tests/' \
            --exclude='phpunit.xml' \
            backend/ $USERNAME@$HOST:$DEPLOY_PATH

          ssh $USERNAME@$HOST "sudo chown -R $USERNAME:www-data $DEPLOY_PATH"
          ssh $USERNAME@$HOST "sudo chmod -R 775 $DEPLOY_PATH/var"
          ssh $USERNAME@$HOST "sudo chmod -R 755 $DEPLOY_PATH/public"

          ssh $USERNAME@$HOST "echo -e '<IfModule mod_rewrite.c>\nRewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^ index.php [QSA,L]\n</IfModule>' > $DEPLOY_PATH/public/.htaccess"

          ssh $USERNAME@$HOST "sudo a2enmod rewrite headers"

      - name: Setup database and run migrations
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            if ! command -v mysql &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y mysql-client
            fi

            MYSQL_ROOT_PASSWORD="RootPass123!"
            DB_NAME="proyecto"
            DB_USER="appuser"
            DB_PASSWORD="AppUserPass456!"
            MYSQL_PORT=3306

            MYSQL_VERSION=$(mysql -u root -p"$MYSQL_ROOT_PASSWORD" -e "SELECT VERSION();" -s --skip-column-names | cut -d'-' -f1)

            mysql -u root -p"$MYSQL_ROOT_PASSWORD" -e "
              CREATE DATABASE IF NOT EXISTS $DB_NAME CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
              CREATE USER IF NOT EXISTS '$DB_USER'@'%' IDENTIFIED BY '$DB_PASSWORD';
              GRANT ALL PRIVILEGES ON $DB_NAME.* TO '$DB_USER'@'%';
              FLUSH PRIVILEGES;
            "

            cd $DEPLOY_PATH/backend

            echo "APP_ENV=prod" > .env.local
            echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env.local
            echo "DATABASE_URL=mysql://$DB_USER:$DB_PASSWORD@127.0.0.1:$MYSQL_PORT/$DB_NAME?serverVersion=$MYSQL_VERSION&charset=utf8mb4" >> .env.local

            /usr/bin/composer install --no-dev --optimize-autoloader --no-interaction --no-scripts
            php bin/console cache:clear --env=prod --no-debug
            php bin/console cache:warmup --env=prod --no-debug
            php bin/console doctrine:migrations:migrate --no-interaction --env=prod
            php bin/console assets:install public --env=prod --no-debug

            sudo systemctl restart apache2
